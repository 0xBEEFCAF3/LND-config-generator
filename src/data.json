{
  "__internal": {
    "platform": {
      "name": "Platform",
      "description": {
        "Linux": "Config for Linux",
        "Mac OS": "Config for Mac OS"
      },
      "default": null,
      "values": ["Linux", "Mac OS"]
    }
  },
  "chain": {
    "section": "Chain Selection",
    "description": "Choose which network / blockchain to use.",
    "chain": {
      "name": "Chain",
      "description": "Run this node on the given network.",
      "description": {
        "main": "Main Network",
        "test": "Test Network.",
        "regtest": "Regression Test Network"
      },
      "default": "main",
      "values": [
        "Mainnet [main]",
        "Testnet [test]",
        "Regtest [regtest]"
      ]
    },
    "testnet": {
      "name": "Testnet",
      "description": "Run this node on the Bitcoin Test Network. Equivalent to -chain=test",
      "default": 0
    },
    "regtest": {
      "name": "Regtest",
      "description": "Run this node on its own independent test network. Equivalent to -chain=regtest",
      "default": 0
    },
    "signet": {
      "name": "Signet",
      "description": "Use the signet chain. Equivalent to -chain=signet. Note that the network is defined by the -signetchallenge parameter",
      "default": 0
    },
    "signetchallenge": {
      "name": "Signet Challenge",
      "description": "Blocks must satisfy the given script to be considered valid (only for signet networks)"
    },
    "signetseednode": {
      "name": "Signet Seed Node",
      "description": "Specify a seed node for the signet network, in the hostname[:port] format, e.g. sig.net:1234 (may be used multiple times to specify multiple seed nodes)"
    },
    "vbparams": {
      "name": "Version Bits Deployment Params",
      "description": "Use given start/end times for specified version bits deployment. Regtest mode only, in format <deployment:start:end[:min_activation_height]>. Can be set multiple times.",
      "default": ""
    }
  },
  "app": {
    "section": "Application Configs",
    "description": "The directory that lnd stores all wallet, chain, and channel related data; within The default is ~/.lnd/data on POSIX OSes, $LOCALAPPDATA/Lnd/data on ; Windows, ~/Library/Application Support/Lnd/data on Mac OS, and $home/lnd/data ; on Plan9. Environment variables are expanded so they may be used. NOTE: ; Windows environment variables are typically %VARIABLE%, but they must be ; accessed with $VARIABLE here. Also, ~ is expanded to $LOCALAPPDATA on Windows.",
    "datadir": {
      "name": "Data Dir",
      "description": "The directory that lnd stores all wallet, chain, and channel related data",
      "default": "datadir=~/.lnd/data"
    },
    "logdir": {
      "name": "Log Dir",
      "description": "The directory that logs are stored in. The logs are auto-rotated by default. Rotated logs are compressed in place.",
      "default": "~/.lnd/logs"
    },
    "maxlogfiles": {
      "name": "Max Log Files",
      "description": "Number of logfiles that the log rotation should keep. Setting it to 0 disables deletion of old log files.",
      "default": "3"
    },
    "maxlogfilesize": {
      "name": "Max Log File Size",
      "description": "Max log file size in MB before it is rotated.",
      "default": ""
    },
    "acceptortimeout": {
      "name": "Acceptor Timeout",
      "description": "Time after which an RPCAcceptor will time out and return false if it hasn't yet received a response.",
      "default": "15s"
    },
    "tlscertpath": {
      "name": "TLS Cert Path",
      "description": "Path to TLS certificate for lnd's RPC and REST services.",
      "default": "~/.lnd/tls.cert"
    },
    "tlskeypath": {
      "name": "TLS Private Key Path",
      "description": "Path to TLS private key for lnd's RPC and REST services.",
      "default": "~/.lnd/tls.key"
    },
    "tlsextraip": {
      "name": "Tls Extra IP",
      "description": "Adds an extra ip to the generated certificate. Setting multiple tlsextraip= entries is allowed.",
      "default": ""
    },
    "tlsextradomain": {
      "name": "Tls Extra domain",
      "description": "Adds an extra domain to the generate certificate. Setting multiple tlsextradomain= entries is allowed.",
      "default": ""
    },
    "tlsautorefresh": {
      "name": "Tls auto refresh",
      "description": "The duration from generating the self signed certificate to the certificate expiry date. Valid time units are {s, m, h}. The below value is about 14 months (14 * 30 * 24 = 10080)",
      "default": "10080h"
    },
    "tlscertduration": {
      "name": "Publish Hash Sequence Message High Water Mark",
      "description": "If set, then all certs will automatically be refreshed if they're close to expiring, or if any parameters related to extra IPs or domains in the cert change.",
      "default": ""
    },
    "tlsdisableautofill": {
      "name": "Tls disable auto fill",
      "description": "Do not include the interface IPs or the system hostname in TLS certificate, use first --tlsextradomain as Common Name instead, if set.",
      "default": "true"
    },
    "externalhosts": {
      "name": "External Hosts",
      "description": "A list of domains for lnd to periodically resolve, and advertise the resolved. IPs for the backing node. This is useful for users that only have a dynamic IP, or want to expose the node at a domain.",
      "default": "my-node-domain.com"
    },
    "letsencryptdir": {
      "name": "Lets encrypt dir",
      "description": "Lets the directory to store Let's Encrypt certificates within",
      "default": "~/.lnd/letsencrypt"
    },
    "letsencryptlisten": {
      "name": "Lets encrypt listen",
      "description": "The IP:port on which lnd will listen for Let's Encrypt challenges.",
      "default": "localhost:8080"
    },
    "letsencryptdomain": {
      "name": "Lets encrypt domain",
      "description": "Request a Let's Encrypt certificate for this domain. Note that the certificate is only requested and stored when the first rpc connection comes in.",
      "default": "example.com"
    },
    "no-macaroons": {
      "name": "No macaroons",
      "description": "Disable macaroon authentication. Macaroons are used as bearer credentials to authenticate all RPC access",
      "default": "false"
    },
    "sync-freelist": {
      "name": "Sync Fee List",
      "description": "Enable free list syncing for the default bbolt database. This will decrease start up time, but can result in performance degradation for very large databases, and also result in higher memory usage. If \"free list corruption\" is detected, then this flag may resolve things.",
      "default": "true"
    },
    "adminmacaroonpath": {
      "name": "Admin Macaroon Path",
      "description": "Path to write the admin macaroon for lnd's RPC and REST services if it doesn't exist",
      "default": "~/.lnd/data/chain/bitcoin/simnet/admin.macaroon"
    },
    "readonlymacaroonpath": {
      "name": "Read only macaroon",
      "description": "Path to write the read-only macaroon for lnd's RPC and REST services if it doesn't exist.",
      "default": "~/.lnd/data/chain/bitcoin/simnet/readonly.macaroon"
    },
    "invoicemacaroonpath": {
      "name": "invoice macaroon path",
      "description": "Path to write the invoice macaroon for lnd's RPC and REST services if it doesn't exist.",
      "default": "~/.lnd/data/chain/bitcoin/simnet/invoice.macaroon"
    },
    "coin-selection-strategy": {
      "name": "Coin Selection Strategy",
      "description": "The strategy to use for selecting coins for wallet transactions. Options are 'largest' and 'random'.",
      "default": "largest"
    },
    "payments-expiration-grace-period": {
      "name": "Payments expiration grace period",
      "description": " A period to wait before for closing channels with outgoing htlcs that have timed out and are a result of this nodes instead payment. Valid time units are {s, m, h}.",
      "default": "true"
    }
  }
}