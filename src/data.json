{
  "__internal": {
    "platform": {
      "name": "Platform",
      "description": {
        "Linux": "Config for Linux",
        "Mac OS": "Config for Mac OS"
      },
      "default": null,
      "values": ["Linux", "Mac OS"]
    }
  },
  "chain": {
    "section": "Chain Selection",
    "description": "Choose which network / blockchain to use.",
    "chain": {
      "name": "Chain",
      "description": "Run this node on the given network.",
      "description": {
        "main": "Main Network",
        "test": "Test Network.",
        "regtest": "Regression Test Network"
      },
      "default": "main",
      "values": [
        "Mainnet [main]",
        "Testnet [test]",
        "Regtest [regtest]"
      ]
    },
    "testnet": {
      "name": "Testnet",
      "description": "Run this node on the Bitcoin Test Network. Equivalent to -chain=test",
      "default": 0
    },
    "regtest": {
      "name": "Regtest",
      "description": "Run this node on its own independent test network. Equivalent to -chain=regtest",
      "default": 0
    },
    "signet": {
      "name": "Signet",
      "description": "Use the signet chain. Equivalent to -chain=signet. Note that the network is defined by the -signetchallenge parameter",
      "default": 0
    },
    "signetchallenge": {
      "name": "Signet Challenge",
      "description": "Blocks must satisfy the given script to be considered valid (only for signet networks)"
      
    },
    "signetseednode": {
      "name": "Signet Seed Node",
      "description": "Specify a seed node for the signet network, in the hostname[:port] format, e.g. sig.net:1234 (may be used multiple times to specify multiple seed nodes)"
    },
    "vbparams": {
      "name": "Version Bits Deployment Params",
      "description": "Use given start/end times for specified version bits deployment. Regtest mode only, in format <deployment:start:end[:min_activation_height]>. Can be set multiple times.",
      "default": ""
    }
  },
  "app": {
    "section": "Application Configs",
    "description": "Basic parameters regarding LND node operation.",
    "datadir": {
      "name": "Data Dir",
      "description": "The directory that lnd stores all wallet, chain, and channel related data",
      "default": "~/.lnd/data"
    },
    "logdir": {
      "name": "Log Dir",
      "description": "The directory that logs are stored in. The logs are auto-rotated by default. Rotated logs are compressed in place.",
      "default": "~/.lnd/logs"
    },
    "maxlogfiles": {
      "name": "Max Log Files",
      "description": "Number of logfiles that the log rotation should keep. Setting it to 0 disables deletion of old log files.",
      "default": 3
    },
    "maxlogfilesize": {
      "name": "Max Log File Size",
      "description": "Max log file size in MB before it is rotated.",
      "default": ""
    },
    "acceptortimeout": {
      "name": "Acceptor Timeout",
      "description": "Time after which an RPCAcceptor will time out and return false if it hasn't yet received a response.",
      "default": "15s"
    },
    "tlscertpath": {
      "name": "TLS Cert Path",
      "description": "Path to TLS certificate for lnd's RPC and REST services.",
      "default": "~/.lnd/tls.cert"
    },
    "tlskeypath": {
      "name": "TLS Private Key Path",
      "description": "Path to TLS private key for lnd's RPC and REST services.",
      "default": "~/.lnd/tls.key"
    },
    "tlsextraip": {
      "name": "Tls Extra IP",
      "description": "Adds an extra ip to the generated certificate. Setting multiple tlsextraip= entries is allowed.",
      "default": ""
    },
    "tlsextradomain": {
      "name": "Tls Extra domain",
      "description": "Adds an extra domain to the generate certificate. Setting multiple tlsextradomain= entries is allowed.",
      "default": ""
    },
    "tlsautorefresh": {
      "name": "Tls auto refresh",
      "description": "The duration from generating the self signed certificate to the certificate expiry date. Valid time units are {s, m, h}. The below value is about 14 months (14 * 30 * 24 = 10080)",
      "default": "10080h"
    },
    "tlscertduration": {
      "name": "Publish Hash Sequence Message High Water Mark",
      "description": "If set, then all certs will automatically be refreshed if they're close to expiring, or if any parameters related to extra IPs or domains in the cert change.",
      "default": ""
    },
    "tlsdisableautofill": {
      "name": "Tls disable auto fill",
      "description": "Do not include the interface IPs or the system hostname in TLS certificate, use first --tlsextradomain as Common Name instead, if set.",
      "default": true
    },
    "externalhosts": {
      "name": "External Hosts",
      "description": "A list of domains for lnd to periodically resolve, and advertise the resolved. IPs for the backing node. This is useful for users that only have a dynamic IP, or want to expose the node at a domain.",
      "default": "my-node-domain.com"
    },
    "letsencryptdir": {
      "name": "Lets encrypt dir",
      "description": "Lets the directory to store Let's Encrypt certificates within",
      "default": "~/.lnd/letsencrypt"
    },
    "letsencryptlisten": {
      "name": "Lets encrypt listen",
      "description": "The IP:port on which lnd will listen for Let's Encrypt challenges.",
      "default": "localhost:8080"
    },
    "letsencryptdomain": {
      "name": "Lets encrypt domain",
      "description": "Request a Let's Encrypt certificate for this domain. Note that the certificate is only requested and stored when the first rpc connection comes in.",
      "default": "example.com"
    },
    "no-macaroons": {
      "name": "No macaroons",
      "description": "Disable macaroon authentication. Macaroons are used as bearer credentials to authenticate all RPC access",
      "default": false
    },
    "sync-freelist": {
      "name": "Sync Fee List",
      "description": "Enable free list syncing for the default bbolt database. This will decrease start up time, but can result in performance degradation for very large databases, and also result in higher memory usage. If \"free list corruption\" is detected, then this flag may resolve things.",
      "default": true
    },
    "adminmacaroonpath": {
      "name": "Admin Macaroon Path",
      "description": "Path to write the admin macaroon for lnd's RPC and REST services if it doesn't exist",
      "default": "~/.lnd/data/chain/bitcoin/simnet/admin.macaroon"
    },
    "readonlymacaroonpath": {
      "name": "Read only macaroon",
      "description": "Path to write the read-only macaroon for lnd's RPC and REST services if it doesn't exist.",
      "default": "~/.lnd/data/chain/bitcoin/simnet/readonly.macaroon"
    },
    "invoicemacaroonpath": {
      "name": "invoice macaroon path",
      "description": "Path to write the invoice macaroon for lnd's RPC and REST services if it doesn't exist.",
      "default": "~/.lnd/data/chain/bitcoin/simnet/invoice.macaroon"
    },
    "coin-selection-strategy": {
      "name": "Coin Selection Strategy",
      "description": "The strategy to use for selecting coins for wallet transactions. Options are 'largest' and 'random'.",
      "default": "largest"
    },
    "payments-expiration-grace-period": {
      "name": "Payments expiration grace period",
      "description": " A period to wait before for closing channels with outgoing htlcs that have timed out and are a result of this nodes instead payment. Valid time units are {s, m, h}.",
      "default": true
    },
    "listen": {
      "name": "Listen",
      "description": "Specify the interfaces to listen on for p2p connections. One listen address per line.",
      "default": "0.0.0.0:9735"
    },
    "nolisten": {
      "name": "No Listen",
      "description": "Disable listening for incoming p2p connections. This will override all listeners.",
      "default": false
    },
    "rpclisten": {
      "name": "RPC Listen",
      "description": "Specify the interfaces to listen on for gRPC connections. One listen address per line.",
      "default": "localhost:10009"
    },
    "restlisten": {
      "name": "REST Listen",
      "description": "Specify the interfaces to listen on for REST connections. One listen address per line.",
      "default": "0.0.0.0:8080"
    },
    "restcors": {
      "name": "REST CORS",
      "description": "A series of domains to allow cross origin access from. This controls the CORs policy of the REST RPC proxy.",
      "default": ""
    },
    "externalip": {
      "name": "External Ip",
      "description": "Adding an external IP will advertise your node to the network. This signals that your node is available to accept incoming channels. If you don't wish to advertise your node, this value doesn't need to be set.",
      "default": ""
    },
    "nat": {
      "name": "NAT",
      "description": "Instead of explicitly stating your external IP address, you can also enable UPnP or NAT-PMP support on the daemon.",
      "default": false
    },
    "norest": {
      "name": "No REST",
      "description": "Disable REST API.",
      "default": false
    },
    "no-rest-tls": {
      "name": "No REST TLS",
      "description": "Disable TLS for the REST API.",
      "default": false
    },
    "addpeer": {
      "name": "Add Peer",
      "description": "Specify peer(s) to connect to first.",
      "default": ""
    },
    "ws-ping-interval": {
      "name": "WS Ping Interval",
      "description": "The ping interval for REST based WebSocket connections, set to 0 to disable sending ping messages from the server side. Valid time units are {s, m, h}.",
      "default": ""
    },
    "ws-pong-wait": {
      "name": "WS Pong Wait",
      "description": "The time we wait for a pong response message on REST based WebSocket connections before the connection is closed as inactive. Valid time units are {s, m, h}.",
      "default": ""
    },
    "minbackoff": {
      "name": "Min Backoff",
      "description": "Shortest backoff when reconnecting to persistent peers. Valid time units are {s, m, h}.",
      "default": ""
    },
    "maxbackoff": {
      "name": "Max Backoff",
      "description": "Longest backoff when reconnecting to persistent peers. Valid time units are {s, m, h}.",
      "default": ""
    },
    "connectiontimeout": {
      "name": "Connection Timeout",
      "description": "The timeout value for network connections in seconds, default to 120 seconds. Valid uints are {ms, s, m, h}.",
      "default": ""
    },
    "debuglevel": {
      "name": "Debug Level",
      "description": "Debug logging level. Valid levels are {trace, debug, info, warn, error, critical}",
      "default": "debug"
    },
    "cpuprofile": {
      "name": "CPU Profile",
      "description": "Write CPU profile to the specified file.",
      "default": ""
    },
    "profile": {
      "name": "Profile",
      "description": "Enable HTTP profiling on given port -- NOTE port must be between 1024 and 65536. The profile can be access at: http://localhost:<PORT>/debug/pprof/.",
      "default": ""
    },
    "unsafe-replay": {
      "name": "Unsafe Replay",
      "description": "Causes a link to replay the adds on its commitment txn after starting up, this enables testing of the sphinx replay logic.",
      "default": ""
    },
    "maxpendingchannels": {
      "name": "Max Pending Channels",
      "description": "The maximum number of incoming pending channels permitted per peer.",
      "default": "1"
    },
    "backupfilepath": {
      "name": "Backup file Path",
      "description": "The target location of the channel backup file.",
      "default": ""
    },
    "blockcachesize": {
      "name": "Block Cache Size",
      "description": "The maximum capacity of the block cache in bytes. Increasing this will result in more blocks being kept in memory but will increase performance when the same block is required multiple times.",
      "default": ""
    },
    "feeurl": {
      "name": "Fee Url",
      "description": "Optional URL for external fee estimation. If no URL is specified, the method for fee estimation will depend on the chosen backend and network. Must be set for neutrino on mainnet.",
      "default": ""
    },
    "nobootstrap": {
      "name": "No Boot Strap",
      "description": "If true, then automatic network bootstrapping will not be attempted. This means that your node won't attempt to automatically seek out peers on the network",
      "default": false
    },
    "noseedbackup": {
      "name": "No Seed Backup",
      "description": "If true, NO SEED WILL BE EXPOSED -- EVER, AND THE WALLET WILL BE ENCRYPTED USING THE DEFAULT PASSPHRASE. THIS FLAG IS ONLY FOR TESTING AND SHOULD NEVER BE USED ON MAINNET.",
      "default": false
    },
    "wallet-unlock-password-file": {
      "name": "Wallet Unlock Password File",
      "description": "The full path to a file (or pipe/device) that contains the password for \n;unlocking the wallet; if set, no unlocking through RPC is possible and lnd\n; will exit if no wallet exists or the password is incorrect; if\n; wallet-unlock-allow-create is also set then lnd will ignore this flag if no\n; wallet exists and allow a wallet to be created through RPC.",
      "default": ""
    },
    "wallet-unlock-allow-create": {
      "name": "Wallet Unlock Allow Create",
      "description": "Don't fail with an error if wallet-unlock-password-file is set but no wallet\n; exists yet. Not recommended for auto-provisioned or high-security systems\n; because the wallet creation RPC is unauthenticated and an attacker could\n; inject a seed while lnd is in that state.",
      "default": ""
    },
    "reset-wallet-transactions": {
      "name": "Reset Wallet Transactions",
      "description": "Removes all transaction history from the on-chain wallet on startup, forcing a\n; full chain rescan starting at the wallet's birthday. Implements the same\n; functionality as btcwallet's dropwtxmgr command. Should be set to false after\n; successful execution to avoid rescanning on every restart of lnd.",
      "default": ""
    },
    "minchansize": {
      "name": "Minimum Channel Size",
      "description": "The smallest channel size (in satoshis) that we should accept. Incoming channels smaller than this will be rejected, default value 20000.",
      "default": ""
    },
    "maxchansize": {
      "name": "Max Channel Size",
      "description": "The largest channel size (in satoshis) that we should accept. Incoming channels larger than this will be rejected. For non-Wumbo channels this limit remains 16777215 satoshis by default as specified in BOLT-0002.",
      "default": ""
    },
    "coop-close-target-confs": {
      "name": "Coopertive Close Target Confirmations",
      "description": "The target number of blocks in which a cooperative close initiated by a remote\n; peer should be confirmed. This target is used to estimate the starting fee\n; rate that will be used during fee negotiation with the peer. This target is\n; is also used for cooperative closes initiated locally if the --conf_target\n; for the channel closure is not set.",
      "default": ""
    },
    "channel-commit-interval": {
      "name": "Channel Commit Interval",
      "description": "The maximum time that is allowed to pass between receiving a channel state\n; update and signing the next commitment. Setting this to a longer duration\n; allows for more efficient channel operations at the cost of latency.",
      "default": ""
    },
    "pending-commit-interval": {
      "name": "Pending Commit Interval",
      "description": "The maximum time that is allowed to pass while waiting for the remote party\n; to revoke a locally initiated commitment state",
      "default": ""
    },
    "channel-commit-batch-size": {
      "name": "Channel Commit Batch Size",
      "description": "The maximum number of channel state updates that is accumulated before signing\n; a new commitment.",
      "default": ""
    },
    "keep-failed-payment-attempts": {
      "name": "Keep Failed Payment Attempts",
      "description": "Keeps persistent record of all failed payment attempts for successfully\n; settled payments.",
      "default": ""
    },
    "default-remote-max-htlcs": {
      "name": "Default Remote Max HTLCs",
      "description": "The default max_htlc applied when opening or accepting channels. This value\n; limits the number of concurrent HTLCs that the remote party can add to the\n; commitment. The maximum possible value is 483.",
      "default": ""
    },
    "chan-enable-timeout": {
      "name": "Channel Enable Timeout",
      "description": "The duration that a peer connection must be stable before attempting to send a\n; channel update to re-enable or cancel a pending disables of the peer's channels\n; on the network.",
      "default": "19m"
    },
    "chan-disable-timeout": {
      "name": "Channel Disable Timeout",
      "description": "The duration that must elapse after first detecting that an already active\n; channel is actually inactive and sending channel update disabling it to the \n; network. The pending disable can be canceled if the peer reconnects and becomes\n; stable for chan-enable-timeout before the disable update is sent.",
      "default": "20m"
    },
    "chan-status-sample-interval": {
      "name": "Channel Status Sample Interval",
      "description": "The polling interval between attempts to detect if an active channel has become; inactive due to its peer going offline.",
      "default": "1m"
    },
    "height-hint-cache-query-disable": {
      "name": "Height Hit Cache Query Disable",
      "description": "Disable queries from the height-hint cache to try to recover channels stuck in\n; the pending close state. Disabling height hint queries may cause longer chain\n; rescans, resulting in a performance hit. Unset this after channels are unstuck\n; so you can get better performance again.",
      "default": false
    },
    "historicalsyncinterval": {
      "name": "Historical Sync Interval",
      "description": "The polling interval between historical graph sync attempts. Each historical\n; graph sync attempt ensures we reconcile with the remote peer's graph from the\n; genesis block.",
      "default": "1h"
    },
    "ignore-historical-gossip-filters": {
      "name": "Ignore Historical Gossip Filters",
      "description": "If true, will not reply with historical data that matches the range specified\n; by a remote peer's gossip_timestamp_filter. Doing so will result in lower\n; memory and bandwidth requirements.",
      "default": false
    },
    "rejectpush": {
      "name": "Reject Push",
      "description": " If true, lnd will not accept channel opening requests with non-zero push\n; amounts. This should prevent accidental pushes to merchant nodes.",
      "default": false
    },
    "rejecthtlc": {
      "name": "Reject HTLCs",
      "description": "If true, lnd will not forward any HTLCs that are meant as onward payments. This; option will still allow lnd to send HTLCs and receive HTLCs but lnd won't be; used as a hop.",
      "default": false
    },
    "requireinterceptor": {
      "name": "Require Interceptor",
      "description": "If true, all HTLCs will be held until they are handled by an interceptor",
      "default": false
    },
    "stagger-initial-reconnect": {
      "name": "Stagger Initial Reconnect",
      "description": "If true, will apply a randomized staggering between 0s and 30s when\n; reconnecting to persistent peers on startup. The first 10 reconnections will be\n; attempted instantly, regardless of the flag's value",
      "default": false
    },
    "max-cltv-expiry": {
      "name": "Max CLTV Expiry",
      "description": "The maximum number of blocks funds could be locked up for when forwarding\n; payments. (default: 2016)",
      "default": 2016
    },
    "max-channel-fee-allocation": {
      "name": "Max Channel Fee Allocation",
      "description": "The maximum percentage of total funds that can be allocated to a channel's\n; commitment fee. This only applies for the initiator of the channel. Valid\n; values are within [0.1, 1]. (default: 0.5)",
      "default": 0.5
    },
    "max-commit-fee-rate-anchors": {
      "name": "Max Commit Fee Rate Anchors",
      "description": "The maximum fee rate in sat/vbyte that will be used for commitments of\n; channels of the anchors type. Must be large enough to ensure transaction\n; propagation",
      "default": 10
    },
    "dust-threshold": {
      "name": "Dust Threshold",
      "description": "A threshold defining the maximum amount of dust a given channel can have\n; after which forwarding and sending dust HTLC's to and from the channel will\n; fail. This amount is expressed in satoshis.",
      "default": 500000
    },
    "dry-run-migratio": {
      "name": "Dry Run Migration",
      "description": "If true, lnd will abort committing a migration if it would otherwise have been\n; successful. This leaves the database unmodified, and still compatible with the\n; previously active version of lnd.",
      "default": false
    },
    "enable-upfront-shutdown": {
      "name": "Enable Upfront Shutdown",
      "description": "If true, option upfront shutdown script will be enabled. If peers that we open\n; channels with support this feature, we will automatically set the script to\n; which cooperative closes should be paid out to on channel open. This offers the\n; partial protection of a channel peer disconnecting from us if cooperative\n; close is attempted with a different script.",
      "default": false
    },
    "accept-keysend": {
      "name": "Accept Keysend",
      "description": "If true, spontaneous payments through keysend will be accepted.\n; This is a temporary solution until AMP is implemented which is expected to be soon.\n; This option will then become deprecated in favor of AMP.",
      "default": ""
    },
    "keysend-hold-time": {
      "name": "Keysend Hold Time",
      "description": "If non-zero, keysend payments are accepted but not immediately settled. If the\n; payment isn't settled manually after the specified time, it is canceled\n; automatically. [experimental]",
      "default": 0
    },
    "accept-amp": {
      "name": "Accept AMP",
      "description": "If true, spontaneous payments through AMP will be accepted. Payments to AMP\n; invoices will be accepted regardless of this setting.",
      "default": false
    },
    "gc-canceled-invoices-on-startup=true": {
      "name": "Garbage Collect Invoice on Startup",
      "description": "If true, we'll attempt to garbage collect canceled invoices upon start.",
      "default": false
    },
    "gc-canceled-invoices-on-the-fly": {
      "name": "Garbage Collect",
      "description": "If true, we'll delete newly canceled invoices on the fly.",
      "default": false
    },
    "allow-circular-route": {
      "name": "Allow Ciruclar Route",
      "description": "If true, our node will allow htlc forwards that arrive and depart on the same channel.",
      "default": false
    },
    "trickledelay": {
      "name": "Trick Delay",
      "description": "Time in milliseconds between each release of announcements to the network",
      "default": 180000
    },
    "numgraphsyncpeers": {
      "name": "Number Graph Sync Peers",
      "description": "The number of peers that we should receive new graph updates from. This option\n; can be tuned to save bandwidth for light clients or routing nodes.",
      "default": 3
    },
    "prometheus.enable": {
      "name": "Prometheus Enable",
      "description": "If true, lnd will start the Prometheus exporter. Prometheus flags are \n; behind a build/compile flag and are not available by default. lnd must be built \n; with the monitoring tag; `make && make install tags=monitoring` to activate them.",
      "default": false
    },
    "prometheus.listen": {
      "name": "Prometheus Listen",
      "description": "Specify the interface to listen on for Prometheus connections.",
      "default": "0.0.0.0:8989"
    },
    "prometheus.perfhistograms": {
      "name": "Prometheus Perfhistograms",
      "description": "If true, then we'll export additional information that allows users to plot\n; the processing latency, and total time spent across each RPC calls+service.\n; This generates additional memory load for the Prometheus server, and will end\n; up using more disk space over time.",
      "default": ""
    },
    "alias": {
      "name": "Alias",
      "description": "The alias your node will use, which can be up to 32 UTF-8 characters in length.",
      "default": "My Lightning ☇"
    },
    "color": {
      "name": "Color",
      "description": "The color of the node in hex format, used to customize node appearance in\n; intelligence services.",
      "default": "#3399FF"
    }

    
  },
  "bitcoin": {
    "section": "Bitcoin",
    "description": "Bitcoin parameters",
    "bitcoin.active": {
      "name": "Bitcoin Active",
      "description": "If the Bitcoin chain should be active. Atm, only a single chain can be active.",
      "default": true
    },
    "bitcoin.chaindir": {
      "name": "Bitcoin Chaindir",
      "description": "The directory to store the chain's data within.",
      "default": ""
    },
    "bitcoin.mainnet": {
      "name": "Bitcoin Mainnet",
      "description": "Use Bitcoin's main network.",
      "default": true
    },
    "bitcoin.testnet": {
      "name": "Bitcoin Testnet",
      "description": "Use Bitcoin's test network.",
      "default": false
    },
    "bitcoin.regtest": {
      "name": "Bitcoin Regtest",
      "description": " Use Bitcoin's regression test network",
      "default": false
    },
    "bitcoin.signet": {
      "name": "Bitcoin Signet",
      "description": "Use Bitcoin's signet test network",
      "default": false
    },
    "bitcoin.signetchallenge": {
      "name": "Bitcoin Signetchallenge",
      "description": "Connect to a custom signet network defined by this challenge instead of using the global default signet test network -- Can be specified multiple times",
      "default": ""
    },
    "bitcoin.signetseednode": {
      "name": "Bitcoin Signet Seed Node",
      "description": "Specify a seed node for the signet network instead of using the global default signet network seed nodes",
      "default": ""
    },
    "bitcoin.node": {
      "name": "Bitcoin Node",
      "description": "Specify the chain back-end. NOTE: Please note that switching between a full back-end (btcd/bitcoind) and a light back-end (neutrino) is not supported.",
      "default": "btcd",
      "values": [
        "btcd",
        "bitcoind",
        "neutrino"
      ]
    },
     "bitcoin.defaultchanconfs": {
      "name": "Bitcoin Default channel Confirmations",
      "description": "The default number of confirmations a channel must have before it's considered open. We'll require any incoming channel requests to wait this many confirmations before we consider the channel active.",
      "default": 3
    },
    "bitcoin.defaultremotedelay": {
      "name": "Bitcoin Defaultremotedelay",
      "description": "The default number of blocks we will require our channel counterparty to wait; before accessing its funds in case of unilateral close. If this is not set, we; will scale the value according to the channel size.",
      "default": 144
    },
    "bitcoin.maxlocaldelay": {
      "name": "Bitcoin Maxlocaldelay",
      "description": "The maximum number of blocks we will limit the wait that our own funds are encumbered by in the case when our node unilaterally closes. If a remote peer proposes a channel with a delay above this amount, lnd will reject the channel.",
      "default": 2016
    },
    "bitcoin.minhtlc": {
      "name": "Bitcoin Min HTLC",
      "description": "The smallest HTLC we are willing to accept on our channels, in millisatoshi.",
      "default": 1
    },
    "bitcoin.minhtlcout": {
      "name": "Bitcoin Min HTLCL Out",
      "description": "The smallest HTLC we are willing to send out on our channels, in millisatoshi.",
      "default": 1000
    },
    "bitcoin.basefee": {
      "name": "Bitcoin Base Fee",
      "description": "The base fee in millisatoshi we will charge for forwarding payments on our channels.",
      "default": 1000
    },
    "bitcoin.feerate": {
      "name": "Bitcoin Feerate",
      "description": "The fee rate used when forwarding payments on our channels. The total fee charged is basefee + (amount * feerate / 1000000), where amount is the forwarded amount.",
      "default": 1
    },
    "bitcoin.timelockdelta": {
      "name": "Bitcoin Timelock Delta",
      "description": "The CLTV delta we will subtract from a forwarded HTLC's timelock value.",
      "default": 40
    },
    "bitcoin.dnsseed": {
      "name": "Bitcoin DNS Seed",
      "description": "The seed DNS server(s) to use for initial peer discovery. Must be specified as a '<primary_dns>[,<soa_primary_dns>]' tuple where the SOA address is needed for DNS resolution through Tor but is optional for clearnet users. Multiple tuples can be specified, will overwrite the default seed servers. The default seed servers are",
      "default": ""
    }
  }
}